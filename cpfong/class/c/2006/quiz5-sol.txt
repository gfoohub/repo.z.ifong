1. 某一語言共有以下的關鍵字 int flot char for while 
switch case return 試寫一程式可以計算這些關鍵字出現的次數.
略

2. 課本 5-7 頁 getint 可以把一個由 stdin 讀入的數字轉成整數,
試寫一個程式先要求使用者輸入任意個整數後按 ^d 把所有數相加 
例如:	
1+2+3 則輸出 6 
1-3+5-7+9 則輸出 5

/*
getint.c
*/

#include "stdio.h"
#include "ctype.h"

int getch(void);
void ungetch(int);

/* 
	由 stdin 讀入一個 integer 且放入 *pn
	呼叫人把變數位址傳入, 程式以 pointer 把值放回.
	傳回值則表示是否為 EOF 的狀態, 0 表不是 EOF, 
	否則表示是 EOF
*/

int getint(int *pn){
	int c, sign;

	// 先把空白給跳掉
	while (isspace(c=getch()))
		;

	// 不是所謂的數字, 即不是 + - EOF 0-9
	if (!isdigit(c) && c != EOF && c != '+' && c!= '-'){
		ungetch(c);
		// debug
		// printf("pre-return, *pn not defined yet!\n");
		return 0;
	}

	// 正負號, 則 sign 變數為 1 或 -1 以便等一下用
	sign = (c == '-') ? -1 : 1;

	// 如果第一字元為正負號, 則取入第二字元
	if (c == '+' || c == '-')
		c=getch();

	for (*pn=0; isdigit(c); c=getch())
		*pn = 10 * *pn + (c - '0');

	*pn *= sign;

	if (c != EOF)
		ungetch(c);
	return c;
}


#include "stdio.h"
#define SIZE 100

main(){
	int i, n, s, array[SIZE], getint(int *);

	for (n = 0 ; n < SIZE && getint(&array[n]) != EOF; n++)
		;

	for (i=0,s=0 ; i < n; i++){
		s += array[i];
	}
	printf ("sum = %d\n", s); 
}


#define	BUFSIZE 100
char buf[BUFSIZE];

int bufp = 0;

int getch(void){
	return (bufp > 0) ? buf[--bufp] : getchar();
} // end getch

void ungetch(int c){
	if (bufp >= BUFSIZE)
		printf("ungetch: too many characters\n");
	else
		buf[bufp++] = c;
}

3. 利用指標的觀念改寫第 4 章的 getline (4-4頁) 完成後寫一個主程式
來証明你的程式可以把東西讀到 array 中

#include "stdio.h"

getline(char *p, int lim){

	int c;
	char *s; s=p;

	while (--lim > 0 && (c=getchar()) != EOF && c != '\n')
		*p++ = c;
	if (c == '\n')
		*p++ = c;
	*p = '\0';
	return p-s;
}

int getline(char line[], int max);
main(){
	char line[100];
	int i;
	i = getline(line, 100);
	printf ("strlen of line is  %d and are: %s", i, line); 
}
